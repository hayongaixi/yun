name: macOS VNC Server

on:
  workflow_dispatch:

jobs:
  macos-vnc:
    runs-on: macos-latest
    timeout-minutes: 3600

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable Screen Sharing (VNC) with Correct Syntax
        run: |
          export LC_ALL=C
          
          # 1. 激活远程管理服务（基础激活）
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -activate \
            -verbose
          
          # 2. 启用访问权限（单独配置-access）
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -configure \
            -access -on \
            -verbose
          
          # 3. 允许所有用户访问并授予全部权限（严格按照示例格式：-allowAccessFor -allUsers 后直接跟 -privs -all）
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -configure \
            -allowAccessFor -allUsers \
            -privs -all \
            -verbose
          
          # 4. 配置VNC legacy模式（兼容传统VNC客户端）
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -configure \
            -clientopts \
            -setvnclegacy yes \
            -verbose
          
          # 5. 生成并设置VNC密码（使用明确的管道传递，避免参数歧义）
          VNC_PASS=$(openssl rand -hex 8)  # 16位纯十六进制，无特殊字符
          echo "VNC_PASSWORD=$VNC_PASS" >> "$GITHUB_ENV"
          echo -n "$VNC_PASS" | sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -configure \
            -clientopts \
            -setvncpw - \  # "-" 表示从标准输入读取密码
            -verbose
          
          # 6. 重启服务使配置生效（使用示例中的标准重启参数）
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -restart -agent \
            -verbose

      - name: Install Tailscale
        run: |
          brew install tailscale
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-macos-runner-${GITHUB_RUN_ID}
          TAILSCALE_IP=$(tailscale ip -4)
          echo "TAILSCALE_IP=$TAILSCALE_IP" >> "$GITHUB_ENV"

      - name: Verify VNC Port
        run: |
          echo "Checking if VNC port 5900 is listening..."
          lsof -i :5900 || echo "VNC port 5900 not found (may be blocked by CI environment)"
          nc -z -v "$TAILSCALE_IP" 5900 || echo "VNC connection test failed (check service status)"

      - name: Keep Connection Alive
        run: |
          echo "=== VNC ACCESS INFORMATION ==="
          echo "Address: vnc://${TAILSCALE_IP}:5900"
          echo "Username: runner"
          echo "Password: ${VNC_PASSWORD}"
          echo "=============================="
          while true; do
            echo "[$(date)] VNC Active - Terminate workflow to stop"
            sleep 300
          done
