name: Secure macOS VNC

on:
  workflow_dispatch:
    inputs:
      vnc_session_time:
        description: 'VNC Session Timeout (Minutes)'
        required: true
        default: '60'
        type: choice
        options:
          - '30'
          - '60'
          - '120'

env:
  # 确保 Secrets 被安全地导入到 Shell 步骤中
  VNC_USER_PASSWORD: ${{ secrets.VNC_USER_PASSWORD }}
  VNC_PASSWORD: ${{ secrets.VNC_PASSWORD }}

jobs:
  macos_vnc:
    runs-on: macos-latest
    timeout-minutes: ${{ github.event.inputs.vnc_session_time }}
    
    steps:
      - name: Checkout repository for configuration scripts
        uses: actions/checkout@v4

      # 1. Tailscale 配置
      - name: Setup Tailscale Connection
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:gha-mac-vnc
          args: --ssh=false # 禁用 Tailscale SSH

      # 2. VNC 服务配置 (执行步骤 A, B, C)
      - name: Configure macOS VNC Service and User
        run: |
          VNC_USER="vncuser"
          VNC_PASS_SECRET="${{ env.VNC_USER_PASSWORD }}"
          VNC_ONLY_PASS="${{ env.VNC_PASSWORD }}"
          
          # 步骤 A: 创建 VNC 专用用户
          echo "### Starting VNC User Creation"
          sudo dscl. -create /Users/$VNC_USER
          sudo dscl. -create /Users/$VNC_USER UserShell /bin/zsh 
          sudo dscl. -create /Users/$VNC_USER RealName "GitHub VNC User"
          sudo dscl. -create /Users/$VNC_USER UniqueID "502" 
          sudo dscl. -create /Users/$VNC_USER PrimaryGroupID 20
          sudo dscl. -create /Users/$VNC_USER NFSHomeDirectory /Users/$VNC_USER
          echo "$VNC_PASS_SECRET" | sudo dscl. -passwd /Users/$VNC_USER
          sudo mkdir -p /Users/$VNC_USER
          sudo chown -R $VNC_USER:staff /Users/$VNC_USER
          
          # 步骤 B: 强制启用 Screen Sharing Daemon
          echo "### Forcing Screensharing Daemon Start"
          sudo defaults write /var/db/launchd.db/com.apple.launchd/overrides.plist com.apple.screensharing -dict Disabled -bool false
          sudo launchctl unload /System/Library/LaunchDaemons/com.apple.screensharing.plist 2>/dev/null |

| true
          sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist

          # 步骤 C: 配置权限和 VNC 兼容密码
          echo "### Configuring ARD/VNC Permissions"
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -configure -allowAccessFor -allUsers -privs -all
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -configure -clientopts -setvnclegacy -vnclegacy yes -clientopts -setvncpw -vncpw $VNC_ONLY_PASS -restart -agent

      # 3. 输出连接详情并保持会话活跃
      - name: Display Connection Info and Keep Runner Alive
        run: |
          TS_IP=$(tailscale ip -4)
          
          echo "---------------------------------------------------------"
          echo "VNC Host IP (Tailscale): $TS_IP:5900"
          echo "VNC System User: vncuser"
          echo "VNC System Password: ${{ env.VNC_USER_PASSWORD }}"
          echo "VNC-only Password (Optional): ${{ env.VNC_PASSWORD }}"
          echo "---------------------------------------------------------"
          
          echo "::notice title=VNC Connection Info::Connect to Tailscale IP $TS_IP:5900"
          echo "Runner will remain active for up to ${{ github.event.inputs.vnc_session_time }} minutes."
          
          # 保持工作流运行，直到超时或被手动取消
          sleep 3600 & wait $!
