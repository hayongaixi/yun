name: macOS VNC Server

on:
  workflow_dispatch:

jobs:
  macos-vnc:
    runs-on: macos-latest
    timeout-minutes: 360  # 托管 runner 仍受 6 小时限制
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable macOS Screen Sharing (VNC)
        run: |
          # 启用屏幕共享服务
          sudo defaults write /var/db/launchd.db/com.apple.launchd/overrides.plist com.apple.screensharing -dict Disabled -bool false
          sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist
          
          # 允许所有用户访问并开启 VNC 认证
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -configure -allowAccessFor -allUsers -privs -all
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -restart -agent -console
          
          # 开放防火墙端口
          sudo /usr/libexec/ApplicationFirewall/socketfilterfw --add /System/Library/CoreServices/RemoteManagement/ARDAgent.app
          sudo /usr/libexec/ApplicationFirewall/socketfilterfw --unblockapp /System/Library/CoreServices/RemoteManagement/ARDAgent.app

      - name: Create Temporary VNC User (Fix Conflict)
        run: |
          # 避免用户冲突：使用更高的 UniqueID（502 通常未被占用）
          VNC_USER="vncuser"
          # 修复 tr 命令编码问题（指定 LC_ALL=C 避免非法字节）
          VNC_PASS=$(LC_ALL=C tr -dc 'A-Za-z0-9!@#$%^&*' </dev/urandom | head -c 12)
          
          # 先删除已存在的用户（如果有）
          if dscl . -read /Users/$VNC_USER >/dev/null 2>&1; then
            sudo dscl . -delete /Users/$VNC_USER
            sudo rm -rf /Users/$VNC_USER
          fi
          
          # 创建新用户（使用 502 避免冲突）
          sudo dscl . -create /Users/$VNC_USER
          sudo dscl . -create /Users/$VNC_USER UserShell /bin/bash
          sudo dscl . -create /Users/$VNC_USER RealName "VNC Temp User"
          sudo dscl . -create /Users/$VNC_USER UniqueID 502  # 改用 502 避免冲突
          sudo dscl . -create /Users/$VNC_USER PrimaryGroupID 20  # staff 组
          sudo dscl . -create /Users/$VNC_USER NFSHomeDirectory /Users/$VNC_USER
          sudo dscl . -passwd /Users/$VNC_USER "$VNC_PASS"  # 密码加引号避免特殊字符问题
          sudo mkdir -p /Users/$VNC_USER
          sudo chown $VNC_USER:staff /Users/$VNC_USER
          
          # 保存用户信息
          echo "VNC_USER=$VNC_USER" >> $GITHUB_ENV
          echo "VNC_PASSWORD=$VNC_PASS" >> $GITHUB_ENV

      - name: Install Tailscale
        run: |
          brew install tailscale
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=macos-runner-${GITHUB_RUN_ID}
          echo "TAILSCALE_IP=$(tailscale ip -4)" >> $GITHUB_ENV

      - name: Keep VNC Session Alive
        run: |
          echo "=== macOS VNC 访问信息 ==="
          echo "地址: $TAILSCALE_IP:5900"
          echo "用户名: $VNC_USER"
          echo "密码: $VNC_PASSWORD"
          echo "=========================="
          
          while true; do
            echo "[$(date)] VNC 运行中..."
            sleep 300
          done
