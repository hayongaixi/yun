name: macOS VNC Server (Fix Connection Refused)

on:
  workflow_dispatch:

jobs:
  macos-vnc:
    runs-on: macos-latest
    timeout-minutes: 360

    steps:
      - name: 启动VNC服务并开放端口
        run: |
          # 停止旧服务
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -stop -agent
          # 配置VNC（一行命令确保参数正确）
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -configure -allowAccessFor -allUsers -clientopts -setvnclegacy yes -setvncpw temp1234
          # 生成随机密码
          VNC_PASS=$(openssl rand -hex 6)
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -configure -clientopts -setvncpw "$VNC_PASS"
          echo "VNC_PASSWORD=$VNC_PASS" >> $GITHUB_ENV
          echo "VNC_USER=runner" >> $GITHUB_ENV
          # 重启服务
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -restart -agent

      - name: 开放防火墙并检查端口
        run: |
          # 关闭防火墙（临时测试）
          sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate off
          # 检查5900端口是否监听
          echo "5900端口监听状态："
          lsof -i :5900
          # 检查VNC进程
          echo "VNC进程状态："
          pgrep ARDAgent && echo "ARDAgent运行中"

      - name: 启动Tailscale并检查网络
        run: |
          brew install tailscale
          sudo nohup /opt/homebrew/opt/tailscale/bin/tailscaled > /tmp/tailscaled.log 2>&1 &
          sleep 3
          sudo /opt/homebrew/bin/tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }}
          TAILSCALE_IP=$(sudo /opt/homebrew/bin/tailscale ip -4)
          echo "TAILSCALE_IP=$TAILSCALE_IP" >> $GITHUB_ENV
          # 本地ping测试（在runner内部ping自己的Tailscale IP，确认网络正常）
          ping -c 3 $TAILSCALE_IP

      - name: 访问信息
        run: |
          echo "地址: $TAILSCALE_IP:5900 | 用户名: runner | 密码: $VNC_PASSWORD"
          echo "如果连接被拒绝，检查上述步骤中'5900端口监听状态'和'Tailscale ping测试'是否正常"
          while true; do sleep 300; done
