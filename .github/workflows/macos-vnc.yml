name: macOS VNC Server (Xvnc Fix)

on:
  workflow_dispatch:

jobs:
  macos-vnc:
    runs-on: macos-latest
    timeout-minutes: 3600

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies and Verify Commands
        run: |
          # 安装XQuartz（X11基础）
          brew install --cask xquartz
          
          # 安装TigerVNC（服务器命令为Xvnc）
          brew install tiger-vnc || brew reinstall tiger-vnc
          
          # 配置完整PATH（覆盖Intel和Apple Silicon）
          export PATH="/usr/local/bin:/opt/homebrew/bin:/opt/homebrew/Cellar/tiger-vnc/*/bin:$PATH"
          echo "当前PATH: $PATH"
          
          # 验证TigerVNC服务器命令（实际为Xvnc）
          if ! command -v Xvnc &> /dev/null; then
            echo "错误：未找到Xvnc（TigerVNC服务器），检查安装"
            exit 1
          fi
          echo "Xvnc路径: $(which Xvnc)"
          
          # 启动XQuartz并等待初始化
          open -a XQuartz
          sleep 8

      - name: Configure VNC Server (Xvnc)
        run: |
          # 加载完整PATH
          export PATH="/usr/local/bin:/opt/homebrew/bin:/opt/homebrew/Cellar/tiger-vnc/*/bin:$PATH"
          export LC_ALL=C
          export DISPLAY=:0  # 绑定X11显示
          
          # 生成随机密码
          VNC_PASS=$(openssl rand -hex 8)
          echo "VNC_PASSWORD=$VNC_PASS" >> "$GITHUB_ENV"
          
          # 创建VNC配置目录和密码文件（TigerVNC兼容格式）
          mkdir -p ~/.vnc
          # 使用x11vnc-passwd生成密码文件（兼容Xvnc）
          echo "$VNC_PASS" | x11vnc -storepasswd -stdin ~/.vnc/passwd
          chmod 600 ~/.vnc/passwd
          
          # 配置Xvnc启动脚本（替代vncserver的xstartup）
          cat > ~/.vnc/xstartup << 'EOF'
          #!/bin/bash
          export DISPLAY=:0
          # 启动窗口管理器
          if command -v openbox &> /dev/null; then
            openbox &
          else
            twm &  # X11默认管理器
          fi
          # 启动终端
          xterm -ls -geometry 80x24+10+10 &
          EOF
          chmod +x ~/.vnc/xstartup
          
          # 停止可能的残留进程
          pkill -f Xvnc || true
          sleep 2
          
          # 直接使用Xvnc启动服务器（替代vncserver）
          # 参数说明：:0=显示端口，-rfbauth=密码文件，-localhost no=允许外部连接
          Xvnc :0 \
            -rfbauth ~/.vnc/passwd \
            -localhost no \
            -geometry 1280x800 \
            -depth 24 \
            -xstartup ~/.vnc/xstartup &
          sleep 5  # 等待Xvnc启动

      - name: Install Tailscale
        run: |
          brew install tailscale
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-macos-runner-${GITHUB_RUN_ID}
          TAILSCALE_IP=$(tailscale ip -4)
          echo "TAILSCALE_IP=$TAILSCALE_IP" >> "$GITHUB_ENV"

      - name: Verify VNC Service
        run: |
          export PATH="/usr/local/bin:/opt/homebrew/bin:$PATH"
          echo "Xvnc进程状态: $(ps aux | grep Xvnc | grep -v grep)"
          echo "5900端口监听: $(netstat -an | grep 5900)"
          nc -z -v "$TAILSCALE_IP" 5900 || echo "端口检查警告 - 等待VNC就绪"

      - name: Keep Connection Alive
        run: |
          echo "=== VNC访问信息 ==="
          echo "地址: vnc://${TAILSCALE_IP}:5900"
          echo "用户名: runner"
          echo "密码: ${VNC_PASSWORD}"
          echo "桌面环境: Openbox 或 twm"
          echo "==================="
          while true; do
            echo "[$(date)] VNC运行中 - 终止工作流以关闭"
            sleep 300
          done
